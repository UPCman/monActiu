
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$monActiu-primary: mat-palette($mat-indigo);
$monActiu-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$monActiu-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$monActiu-theme: mat-light-theme((
  color: (
    primary: $monActiu-primary,
    accent: $monActiu-accent,
    warn: $monActiu-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($monActiu-theme);

/* You can add global styles to this file, and also import other style files */
// Tipologia lletra logo --> Segoe Script. Bold
$colors: (
  primary: #4cca07,
  secondary: #a9e486,
  backgroundGreen1: #e3ebc2,
  backgroundGreen2: #cde376,
  dgreen: #3fa706,
  grayText: #707070,
);

$sizes: (
  xxxxl:  4rem,
  xxxl:   3.1rem,
  xxl:    2.6rem,
  xl:     1.8rem,
  l:      1.6rem,
  m:      1.4rem,
  s:      1.3rem,
  xs:     1.2rem,
  xxs:    1.1rem,
  xxxs:   1rem,
  xxxxs:  0.9rem,
  xxxxxs: 0.8rem,
  xxxxxxs: 0.6rem,
  xxxxxxxs: 0.5rem
);

$breakpoints: (
  'phone': 1050px,
  'laptop': 1400px,
  'desktop': 1920px
);

@mixin screen($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content
    }
  }
  @else {
    @warn "Unavailable breakpoint"
  }
}

html, body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.title {
  font-size: map-get($sizes, xxl);
  color: map-get($colors, grayText);
  font-family: "Josefin", sans-regular;

  @include screen('phone') {
    font-size: map-get($sizes, m);
  }

  @include screen('laptop') {
    font-size: map-get($sizes, xl);
  }
}

.text {
  font-size: map-get($sizes, m);
  color: map-get($colors, grayText);
  text-align: justify;
  font-family: "Josefin", sans-regular;
  line-height: normal;

  @include screen('phone') {
    font-size: map-get($sizes, xs);
  }

  @include screen('laptop') {
    font-size: map-get($sizes, s);
  }
}


::-webkit-scrollbar {
  width: 1em;

  @include screen('phone') {
    display: none;
  }
}

::-webkit-scrollbar-track {
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
}

::-webkit-scrollbar-thumb {
  background-color: map-get($colors, secondary);
  outline: 1px solid map-get($colors, backgroundGreen2);;
}

.theme-dialog  {
  padding: 20px;
  background-color: white;
  border-radius: 15px;

  @include screen('phone') {
    padding: 10px;
  }

  .mat-dialog-container {
    box-shadow: none;

    @include screen('phone') {
      padding: 10px;
    }

    p {
      text-align: center;
      line-height: normal;
      font-family: "Josefin", sans-regular;
    }
  }
}

html, body { height: 100%; }
body { margin: 0; font-family: Josefin, "Josefin", sans-regular; }
@font-face {
  font-family: 'Josefin';
  src: url('assets/fonts/JosefinSans-Regular.ttf')  format('truetype'), /* Safari, Android, iOS */
}
